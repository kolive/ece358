package simulate;
import lab2.event.*;

public class ABPSender {
	
	private EventScheduler es;
	
	private int sn;
	private int nextSN;
	private double timeoutValue;
	private double currentTime;
	
	private double packetSize;
	private double headerSize;
	private double linkRate;
	private double processTime;
	private double propDelay;
	
	public ABPSender(
			double timeout, double ps, double hs, double lr, double pd,
			EventScheduler es){
		sn = 0;
		nextSN = 1;
		timeoutValue = timeout;
		currentTime = 0;
		packetSize = ps;
		headerSize = hs;
		linkRate = lr;
		propDelay = pd;
		this.es = es;
		processTime = (hs + ps)/lr;
	}
	
	public Event send(int sn){
		boolean forwardError = false;
		boolean reverseError = false;
		if(forwardError || reverseError){
			return null;
		}
		
		boolean headerError = false;
		return new Event(EventType.ACK, currentTime + propDelay, sn, headerError);
	}
	
	public void simulate(double simulationTime){
		while(currentTime <= simulationTime){
			Event e = es.dequeue();
			double transferTime = currentTime + processTime;
			es.queue(new Event(EventType.TO, transferTime+timeoutValue));	
			send(sn);
		}
	}

}
